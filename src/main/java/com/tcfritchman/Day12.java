package com.tcfritchman;

import com.tcfritchman.common.Position;

import java.util.*;

public class Day12 {

    static String exampleInput = """
            RRRRIICCFF
            RRRRIICCCF
            VVRRRCCFFF
            VVRCCCJFFF
            VVVVCJJCFE
            VVIVCCJJEE
            VVIIICJJEE
            MIIIIIJJEE
            MIIISIJEEE
            MMMISSJEEE
            """;

    static String realInput = """
            KKKKKKCVCCCCCCEEEEEEJJJJJJJJLLLLLLLLYYJJJJJJJJTGJJGGGWWWZZZZZZGGGGGGGJJZZZZZZTTTTTTTAAAAAAAAAUUUUGGGZZZZZZZSSSSSSSSSHHHHHHHHHPPPRRRRGGGGGGGG
            KKKCCCCCCCCCCCEEEEEEEJJJJJJLLLLLLLLLYYYJKJJTTTTGGGGGGWWWGZZZZZZZGGGGCZZZZZZZZZTTTTTTAAAAAAAAAUUUUUUUZZZZZZSSSSSSHSSSHHHHHHHHHPPPRRRRRGGGGGGG
            KKKCCCCCCCCCCCCEEEEEEJJJJJJLLLLLLLLLLLLKKJJTTTTGGGGGWWGGGGZZZZZGGGGGCZZZZZZZZZTTTTTAAAAAAAAAUUUUUUUUXZZZZZSSSSSSHHHHHHHHHHOOHHPRRRRRRGGGGGGG
            KCKCCCXCCCCCCCCCCEEEEJJJJJJLLLLLLLLLLLLTTTTTTTTGGGGGGGGGGZZZZRZRGGJGCZMMMMZZZTTTTTTAAAAVAVVAAUUUUDUUZZZZZKBBBSHHHHHHHHHHHHOOOPPRRRRRRGGGGGGG
            KCCCCCCCCCCCCCCCCEEEEEJJJJLLLLLLLLLLLLLTTTTTTTTTGGGGGGGGGZZZRRRRRGRRZZMMMMZZZTTTTTTTAAAVVVVUUUUUUUUUUZZZZZPBVBBBPHHHHHHHHHOOOPPRRRRRRRRGGGSG
            KKQQQQCCCCCCCCCCCEEEEJJJJLLLLLLLLLLLLRLTTTTTTTTTMGGGGGGNGZZZRRRRRRRRMMMMMMMMMTTTTTTTAAAAVVVUUUUUUUXZZZZBZZZBBBBPPHHHHHHHHHHHOOHHRMRRRRRGGGGG
            KKQQQQCCCCCCCCCCEEEEEECCZZZLLLLLLLLLRRTTTTTTTTTTMMMMGGNNZZZZRRRRRRRRMMMMMMMMMTTTTTAAAAAAVVVHHHHUUZZZZZZBBBBBBBGGGMHHHHHHHHHHOOHHMMMRMRRGGGRR
            KQQQQQCCCCCCCCCEEEEEEEEEZZZLLLLLLLLLMTTKTTTMMBTTTMYYIGNNNNZZRRRRRRRRMMMMMMMMMTTTTTTMMAHAVVVHHHHUUUZZZZZBBBBBBGGGGGHHHHHHHHHHHOHSMMMMMMRRRRRR
            QQQQQQQCCCCCCAAEELEEEZZZZZZLLLLLLLMMMMTTTTMMMTTTMMYYYYYYNNYZZRRRRRRRRRMMMMMMMTTTTMMMMHHVVVVVHHHHHZZZZBBBBBGBBGGGGGHHHHHHHHHHHHHMMMMMMRRRRRRR
            XQQQQQQQCCNCCADDDDEEEZZZZZZLLLLEEMMMMMMTTTMMMTTTMMYYYYYYYNYYDYGRRRRRRRMMMMMMMMTTTTMMMHHHHHHVHHHHHZHZZZBBBBGGGGGGGGHHHHHHHHHLHHHMMMMMMRRRRRRR
            XQQQQQQQQCCCCAADFFFFFZZZZZLLLLLEMMMMMMMMMMMMMTTTMYYYYYYYYYYYYYYRRRUUUUUUUUUMMMMTTMMMMHHHHHHHHHHHHZHHZZBYGGGGGGGGGHHHHHHHLLLLLLHKMMMMMRRRRRRR
            QQQQQQQQQQCCAADDDFDFFZZZZLLLOMMMMMMMMMMMMMMMTTIMYYYYYYYYYYYYYYYRRRUUUUUUUUUMMMMMMMMMMMHHHHHHHHHHHHHHYYYYYYGGGGGGGGHLLLLLLLLLLIMKMMMMRRRRRRRR
            QQQQQQQQQQDDDDDDDDDFFDDDNNNNOOMMMMMMMMMMMMMMMMMMMYYYYYYYYYYYYYRRRRUUUUUUUUUMMMMMMMMMMMHHHHHHHHHHHHHHYYYYYYGGGGGGGGGLLLLLLLLLLIMMMMMMRRRRRRRR
            QQQQQQQQQQAADDDDDDDFFDDDNOOOOOMTTMMMMMMMMMMMMMMMMYYYYYYYYYYYUUUUUUUUUUUUUUUMMMMMMMMMMMHHHHHHHHHHHHHHYYYYYYGGGGGGGGGGLLLLLLLLOIMMMMMMRRRRRRRR
            QQQQQQQQQQADDDDDDDDDDDDDNOOOOOOOTTYYMYMMMMMMMMMMYYYYYYYYYYYYUUUUUUUUUURIUMMMMMMMMMMMMMMHHHHHHHHHHHHYYYYYYYYGGGGGGGGGGLLLLOOOOIIMRRRRRRRRRRRR
            QQQQQQQQQQDDDDDDDDDDDDDDDDOOOYYOYYYYYYMMMMMMMMMMMYYYYYYYYYYYUUUUUUUUUUUIUUUMUMUMMMMMMMMHHHHHUHHHHHHHYYYYYGGGGGGGGGGGGWLLOOOOOOMMMRRRRRIIRRRR
            QQQQQQQQQBBDRDDDDDDDDDDDEEEEEYYKKYYYYYMMMMMMMMMMBYYYYYYYYYYYUUUUUUUUUUIIUUUUUUUMMMMMMMMHHHUUUUUUUHHHGGGGGGGGGGGGGGGGGWLOOOOOOOMMMRRIRIIRRIII
            QQQQQQQWWBBDDDDDDDDDDDDDDDDEYYYYYYYYYYMMMMMMMMMBBBYYYYYYYYYYUUUUUUUUUUUUUUUUUUUMMMMMMMHHHHUUUUUUUUUUUGGGGGGGGGGGGGWGGOOOOOOOOOIMRRIIIIIIIIIC
            QQQQQQWWWWBDDDDDDDDDDDDDEEEEYYYYYYYYYYYMMMMMMMBBBBBYYYYYYYYUUUUUUUUUUUUUUUUUUUUMMMMMMMHHHHUUUUUUUUUUUUGGGGGGGGGGGGWGGWWWOOOOOORRRIIIIIIIIICC
            QQQQQQQWWWBBDDDDDDDDDDDDDEEYYYYYYYYYYYYMMMMMMMBBBBBBBYBYYYYUUUUUUUUUUUUUUUUUUUUMMMMMMMHHHHUUUUUUUUUVUUGGGGGGGGWWWWWWWWWWWWWOORRRRRRIIIIIIIIC
            FFFQQQQWWWBBDDBBBDDWDPDWDEEEYYYYYYYYYYYMMMMBBBBBBBBBBBBBBYYUUUUUUUUUUUUUUUUUUUUMMMMMMMHHHHAAUUUUUUIUGGGGGGGGGGGGWWWWWWWWWWWOYYRRRRMIIIITIRRC
            FFFQQQQWWWBBDDBBEEDWWWWWWWYYYYYYYYYYYYBMMMBBBBBBBBBBBZBPPPPPPPPPUUUUUUUUUUUUUUUPMSMMNMHHHHHHUUUUUUUUGGGGGGGGGGGGGGWWWWWWWWWOOYYYYRMIIIITRRRC
            FFFQLQQQWWBBBBBBEEWWWWWWWWYYYYYYYYYYYYBBBBBBBBBBBBBZZZZZPPPPPPPPUUUUUUUUUUUUUUUMMMMMPPHHHHHUUUUUSUUUGGGGGGGGGGGGGGWWWWWWWWWYYYYYRRRIIIIRRRUR
            FFFFFFFWWWWBBBEBEEEWWWWWYYYYYYYYYYYYYYBBBBBBBBBBBBBZZZZZPPPPPPPPUUUUUUUUUUUUUUUPPPPPPPPEHHUUUUUHUUUUJGGGGGGGGGGGGGWWWWWWWWWYYYYYRRRIRRRRRRRR
            OOOOOOOOWWWBBEEEEEWWWWWWWWWYYYYYYYYYYBBBBBBBBBPPPPZZZZZZZPPPPPPPUUUUUUUUUUUUPPPPPPPPPPPEHHUGUUHHHHUUGGGGGGGGGGGGGWWWWWWWWWWYYRRRRRRRRRRRRRRR
            OOOOOOOOBBBBBEEEEEEWWWWWWWWWWMYYYYYYYGBWWWWBBBPZZZZZZZZZZPPPPPPPUUUUUUUUPUUUPPPPPPPPPPPHHHUUUUUUHHUHGGGGGGGGGGGGGGWWWWWWWWWWRRRRRRRRRRRRRRRR
            OOOOOOOOOOOOOTEEEEEWWWWWWWWWWWYYZYYYYYYWWWWWBBPZZZZZZZZZZZZPPPPPUUUUUUUUUUUUUUUUUPPPPXPPHUUUUUUHHHHHGGGGGGGGGGGIWWWWWMMWWWWCCRRRRRRRRRRRRRRR
            OOOOOOOOOOOOOOOMEEEWWWWWWWWWWWWWWWEYYYYWVWWWWWPZZZZZZZZZZZZPPPPPUUUSUUUUUUUUUUUUUPPPPPPPNUUUUUUHHHHHHGGGGGGGGGIIIWWWWWMMMWWRRRRRRRRRRRRRRRRR
            OOOOOOOOOOOOOOOOEEEEWWWWWWWWWWWWWWEYYYWWVVWWWWPZZZZZZZZZZZZPPPPPUUSSSSUUUUUUUUUUUPPPPPPNNUUUUUUHHHHHHGGGGGGGGGIIWWWWWWMMMMMRRRRRRRRRRRBRRRRR
            OOOOOOOOOOOOOGOEEEEEWEEWWWWWWWWWWWWZYYYVPPPPPPPZZZZZZZZZZZZPPPPPDUSSSSSSUUUUPPPPPPPPPPPNNNNUUUUHHHHHHGGGGGGGGGIIWWWWMMMMMMMRRRRRRBBRRBBBRRBB
            OOOOOOOOOOOOOOEEEEEEEEEZWWWWWWWWWWWWWYMVPPPPPPPZZZZZZZZZZZZUUUUUDDDSSSSSSUUUPPPPGPPPPPNNNNNUUHHHHHHHHGDDDDGGGZZZZWWMMMMMMMMRRRROROBBBBBBBBBB
            OOOOOOOOOOOOOEEEEEEEEZVVVVVVVVVWWVVVVVVVPPPPPPPZZZZZZZZZZBBBBBUUDDDDSSSSSUUUPPPPGIIIIIIHNNUUHHHHHHHHGGDDDDGGGZZZZWWMMMMMMMMMMMOOOOOBBBBBBBBB
            OOOOOOOOOOOOOEEEEEEEZZVVVVVVVVVWWVVVVVVVPPPPPPPZZZZZZZZZZBBBBWDUDDDDDSSSSUUUPPGGGIIIIIIHNNNUUHHHHHHHDDDDDDDGGZZZZMMMMMMMMMMMMMMOOOOBBBBBBBBB
            BBBBOOOOOOOOOOOOZZZZZZVVVVVVVVVWWWVVVVVVPPPPPPPPPPBBBBBBBBBBBDDDDDDDSSSSSUUUCAGGGIIIIIIHHHHHHHHHHHDDDLDZZDDGZZZZZMMMMMMMMMMOMOOOOBBBBBBBUBBB
            BBBBOOOOOOOOOOOOUZZZZZVVVVVVVVVWWWWVVVVVPPPPPPPPPPBBBBBBBBBBBDDDDDDDSSSSAUUUAAGGGGIIIIIHHHHHHHHHHHDDDDIZZZZGZZZZZZZZMMOMMMMOOOOOEELBBBBMUUBB
            BBBBOOOOOOOOOOOOZZZZZZVVVVVVVVVWWWWVVVVVPPPPPPPPPPBBBBBBBBBBBDDDDDDDDDDSAUUUAAGGGGIIIIIHHHHHHDDDHHDDDDDZZZZZZZZZZZZZGGOOOOLOOOOOOELLLBDUUUBU
            BBBBOOOOOOOOOOOOZZZZZZVVVVVVVVVWWWWWVVVVPPPPPPPPPPBBBBBBBBBBBDDQDDDDDDTAAUUUAAAGGGIIIIIHHHHHHDDDDDDDDLLLZZZZZZZZZZZGGOOOOOOOOOOOEELELLUUUUUU
            BBBBOOOOOOOOOOOOZZZZZZVVVVVVVVVWWWVVVTVVVVVVVVVLLLLBBBBBBBBBBBBBTTTTTTTLLAAAGGGGGGIIIIIVDDDDDDDDDDDDDLLLZZZZZZZZZZZOOOOOOOOOOOOOEELELLLUUUUU
            BBBBOOOOOOOOOOOOZZZZZZZZZZZWWWWWWWVVVTTVVVVLLLLLLLLBBBBBBBBBBBNNTTTTTTLLAAAAAGGGFFIIIIIDDDDDDDDDDDDDDLLLNZZZZZZZZUUOOOOOOOOOLLLOEEEEELLLLUUU
            BBBBOOOOOOEEEZZZZZZZZZZZZZZWWWWWWWBWTTTVVVVLYLLLLLBBBBBBBBBBBBNTTTTTTTTLLLAAAGGGFFIIIIIFDDDDDDDDDDDDDDDDNZNZZNZZZZUUUUOOOOOOOZLEEEEEEELLLULU
            BBBBOOOOOOEEEVZZZZZZZZZZZZNWWWWWWWWWTTTTVVVLYYYYYLBBBBBBBBBBBBTTTTTTTTTLLLLLAGGFFFFFFFFFDDDDDDDDDDDDDDDNNNNNNNZZRZUUOOOOOOOOOLLREEEEELLLLLLU
            BBBBBBVOVVVNNVKZZZZZZZZZZZNNWWWWWWWWWTTTTYVVYYYYYLBBBBBBBBBBBBBTTTTTTTTLLLLLLTTTFFFFFFFFDDDDDDDDDDDDDDDDNNNNEEEZZUUUOOOOOOOLLLLLEEEEEEELLLLU
            BBBBBVVOVVVVVVZZZZZZZZZZZZZNWWWWWWWWTTTTTYYYYYYYYLLLLWWWBBBBBBMMTMTTTTTLLLLLLTTTFFFFFFFFDDDDDDDDDDDDDDDNNNNNEEEEEUUUOGOLLLOLLLLLHEEEEEELLLLU
            BBBBBVVVFVVVVVVVZZZZZZZZRRZNWWWWWWWWWTTTYYYYYYYYYLLLLWWWWWBBBMMMMMMTTTTLLLLLTTTTFFWWFFEFDDDDDDDDDDDDDDNNNNNEEEEEEEUEOOOLLLLLLLLLEEEEEEELLULU
            CCBBBBVVVVVVVVVVVKKCZZZRRRVVVVWVVWWWWKTTTTTYYYYYYLLLWWWWWWWWWWWMMMMWWLTLLLLTTTTTTUTWWWEEEEDDDVDDDDDDEETTNNEEEEEEEEEEESLLSLLLLLLEEEEEEEEEEEEU
            CCCCBUUUVVVVVVVVVKKCZZRRRCVVVVVVWWWWEKKTTTYKYYYYYWWWWWWWWWWWWWWWWWWWWLLLLLLTTTTTTTTWWWEEEEEDEEDSSDDDETTTEEEEEEEEEEEEESSSSSLLLLLLLEEEEEEEUUUU
            CCCCCVVVVVVVVVCPCCCCCZCCCCCVVVVVWWVEEKKKKTYYYYYYYYWWWWWWWWWWWWWWWWWWWWLLLLTTTTTTTTTWWWWEEEEEEESSDDDDDTZTEOEEEEEEEEEEEEEEVSLLLLLLLLEEEEEEUUUU
            CCCCCCCVVVVVVVCPCCCCCCCCCCHCVVVVVVVKKKKKTTYYYYYYYYYYWWWWWWUUWWWWWWWWWUQLLQQJTTTWWTTTWWWEEEEEEEESSSSSDTTTTEEEEEEEEEEEEEEEVVLLLLLLLLEEEEUUUUUU
            CCICCCCVVVVVVVCCCCCCCCCCCCCCCVVVVVVKKKKKKEYYYYYYYWWWWWWSSSSUWWWWWWWWGQQQQQQQQTTWWTWWWWEEEEEEEEESSSTTTTTTTIIEEEEEEEEEEAEVVVVNLLLLEEEEUUUUUUUU
            CCICCCCVVVVVVVCCCCCCCCCCCCCCCVVVVVVVVKKKEEEYYYYYYYYWWWSSSSSUWWWWWWWWWWQQQQQQTTTTWWWWWWWEEEEESSSSSSTTTTTTIIIIEEEEEEEEEVVVVPNNLLLLLUUUUUUUUUUU
            IIIICCCCVVVVVCCCCCCCCCCCCCHHVVVVVVVVKKKKEEEEYYYYYYYYSASSSSSSWWWWWWWWQQQQQQQQQQQQQWWWWWWEEEESSSSSSSSTTTTIOIIIIEEEEEEEEEVVVPPNLLULUUUUUURRRRRR
            IIIIIICVVVVVCCCCCCCCCCCCCCCVVVVVVVVVVKKEEEEEYYYYYYYZSSSSSSSSSWWWWWWWQWQQQQQQQQQQQQWWWWWEESSSSSSSSSTTTDIIIIIIIEIEEEEDELPVPPPRRUUUUUUUUUURRRRR
            IIIIIIVVVVFOCCCCCCCCCCCCCCVVVVVVVVVVVNEEEEEEYYYYYYYSSSSSSSSSSTWWWWWWWWWWQQQQQQQQQQWWWWWWESSSSSTSSSSTDDDRIIIIIIIIEEEEELPPPPPRRRRUUUUUUURRRRRR
            IIIIIVVVVFFFCCCCCCCCCCCCNBHVVVVVVVVVVNEEEECCYCRRYRRSSSSSSSSSBSWWWWWWWWWWWMQQQQQQQQQRRRRRESSSSSTTSSSSIDDDIIIIIIIEEEEEEEPPPPRRRRRUUFFUFFRRRRRR
            IIIIIVVVVTFFCFCCCCCCCCCNNBHHHHVVVVVVNNNNNNCLCCRRRRRRSSSSSHHHHHHWWWWWWWWWMMMQQQQQQQRRRRRRSSTTTSTTSSSSIDLDIIIIIIIIEEEEPEPPRRRRRRRUUFFFFRRRRRRR
            IIIIIIFVVVLFFFFCCCCCCCCNBBBBVVVVVVVVNNNNCNCCCCCCRRRSSSSSSHHHHHHJWWWMWWWMMMMQQQTQQQRRRRSSSSTTTTTTTSSSIDDDIIIIIIIIIEEEPPPPPRRRRRRRRFFFFFRRRRRR
            IIIIIIFFVFFFFFFCCFCCCVVBBBBBBBVVHVVNNNCCCCCCCCCCRRRSSSHHHHHHHHHJWWWMSWWMMMMMQQTQRRRRRRSSSSTTTTTTSSIIIIIIIIIIIIIPPPPPPPPPPRRRRRRRFFFFFFRRRRRR
            IIIIIFFFFFFFFFFFFFCCCCBBBBBBBBBBBBBBCCCCCCCCCCCCRRRSSSHHHHHHHHHJWWWMMMMMMMMTTTTIITRRRRRRTTTTTTTTIIIIIIIIIIIIIIIPPPPPPPPPPRRRRRRRRFFFFFRRRRRR
            IIIIIIFFFFFFFFFFFFCCCYYYBBBBBBBBBBBBCCCCCCCCCCCCRSRSSSHHHHHHHHHJWWWMMMMMMMTTTTTTTTTRRRDDTZTTTTTKCIIIIIIIIIIIIIIPPPPPPPPPRRRRRRRRFFFFRRRRRRRR
            IIIFFFFFFFFFFFFFFFFCCYYYBBBBBBBBBBBCCCCCCCCCCCCCSSSSSSHHHHHHHHHOOMMMMMMMMMMMTTTTTTVVRMDZZZZTKKKKKIIIIIIIIIIIIIIPPPPPPPPPRRRRRRRRFWFRRRRRRRRR
            NIISSFFFFFFFFFFFFFFCCYYYBBBBBBBBBBCCCCCCCCCCCCSSSSSSSSHHHHHHHHHOOOMMMMMMMMMMMJJJJJJJJMDZZZZZZKYKKIIKKIIIIIIIIIIPPPPPPPPRRRRRRRRRFFFRRRRRRRRR
            NTTTSFFFFFFFFFFFFFCCCYYYBBBBBBBBBBBCCCCCCCCCCCSSSNSNSSHHHHHHHHHOOOMMNMMMMMMMMJJJJJJJJMMZZZZZZZKKKIIKKKIIIIIIIIIIPPPPPPPPRRRRRRRRRRRRRRRNNRRR
            TTTTSFFFFFFFFFFFFFFCYYYYYBBBBBBBBBBBCCCCCCCCCCCCNNNNNNHHHHHHHHHOOONNNMMMMMMMMJJJJJJJJMMMMMZZZKKKKKKKKKKIIIIIIIPPPPPPPPPRRRRRRRRRRRRRRNNNNNRR
            TTTTSTTVVFFFFFFFFFFYYYYYBBBBBBBBBBBBCCCICCCCCNNNNNNNNSHHHHHHHHHONNNNNNNNNMMMJJJJJJJJJMMMZZZZKKKKKKKKKKKIIIMMPPPPPPPPPPPPRRRRUURRRRRRRNNNNNNJ
            TTTTTTFVVFFFFFFFFFFYYYBBBBBBBBBBBBBBBBIICCCCCNNXXXNNNNHHHHHHHHHOONNNNNNNNMMMMMMVMMMMMMMMZZZZZZZKKKKZKKKIIMMMMPPPPPPPPPRRRRRRUURRRRHRNNNNNNNN
            GTTTTTTVVFFFFFFFFFFFWWWUBVBBBBBBBBBBIIIIICCCCCNXXXNXNNHHHHHHHHHOOXNNNNNNNNMMMEMVMMMMMMMMMZZZZZZKZKKZKKKIIMMMMMPPPPPPPPRRRRRUUURRRRNNNNNNNNNB
            GTTTTVVVVFFFFAAAWWWWWWWWWVBBBBBBBBIIIIIIITCCCXXXXXXXXNNHHHNNNOOONXNNNNNNNMMMEEMMMMMMMMMMMZZZZZZZZZZZKZZZMMMMMMPPPPPPPPPZZRZZUUUUVRNNNNNNNNNN
            TTTTTTVVVVBBFAAAAAAWWWWWWBBBBBBOZZZIZIIIITQCCCXXXXXXXNNNNNNNNOOONNNNNNNNNNEEEMMMMMMMMMMMMMZZZZZZZZZZZZZZMMMMMMMMPPPPPPPPZZZUUUUUVVNNNNNNNNNN
            TTTTTVVVVVBBFFAAAAAAAWWWWAABBBZZZZZZZIIIITTEEEXXXXXNNNNNNNNNNNNNNNNNNNNNNEEEEEEMMMMMMDMDMMZZZZZZZZZZZZZZMMMMMMMMUUUPPPPPZZZUUUUUUVVNNNNNNNNN
            TTTTVVVVVBBEEEAAAAAAWWWWWAAZBBZZZZZZZIIIITIIEUUXXXXNNNNNNNNNNNNNNNNNNNNNNEEEEEEEMMMMDDDDDZZZZZZZZZZZZZZZMMMMLMMMUUUUPPPPUZZUUUUUUUNNNNNNNNNN
            TTETVVVVVBBBEEEEEAAAAAWAAAAZZZZZZZZZZIIIIIIEEEUXXXXENENNNNNNNNNNNNNNNNNNNEEEEEEEMMDDDDDDZZZZZZZZZZZZZFFFLLLLLMMMUUUUPPPUUZZCUUUUUUNNNNNNNNNN
            TPVVVVVVVBEEEEEEAAAAAAAAAAAZZZZZZHHHHZYYYIIEEEEOXXEEEENNNNNNNUUJNNNNNNNNNNNEEEEEEDDDDDDDDDZZZZZZZZZZZFFFFLLLLMMUUUUUUUUUUZZCUUUUUUUNNNNNNNNN
            PPVVVVVVVVEEEEEEAAAAAAAAAAAAZZZHHHHHHHYYYIUEEEEXXXXEEENNEENNUUUUUUNVVNNENNNEEEEEEEEDDDDDDDZZZZZZZZZZFFFFFFLLLLMMUUUUUUUUCCZCUUUUUUUUUNNNNNNN
            LPPVVVVVVLLLHHEEAAAAHHHHAAHZZZZHHHHHHHYYYYUUEEEEXXXEEEEEEENUUUUUUUNNNNEEEEEEEEEEEEENDDDDDDSZZZZZZZZZFFFFLLLLLLMUUUUUUUCUCCCCCCUUUUUCNNNNNNNN
            LLPVLVVLLLLLLLQYAAAHHHHHHAHZDZHHHHHHHHMYUUUEEEEEEEEEEEEEEEUUUUUUUUUUUEEEEEEEEEEEEEENNDDDDDZZZZZZZZZZZFFFLLLLLLLUUUUUUUCCCCCCCCUUUUUUUUNNNNNN
            LLNNLLLLLLLLLLYYYYHHHHHHHHHHZZHHHHHHHHMMUUUUUUUUEEEEEEEEEUUUUUUUUUUUUUEEEEEEEEEEEENNNNDDDDZDDZZZZZZZFFFFLLLLLLUUUUUURULCCCCCCCCUUUUUUUUNNNNN
            LLNNNLLLLLLLLYYYYYYHHHHHHHHHZZHHHHHHHHUUUUUUUUYUEEEEEEEEEEUUUUUUUUUUUUEEEEEEEEEEOENNNNNNDDDDDZZZZZZFFFLLLLLLLFFSUUULUUCCCCCCCCCCUUUUUUUNNNNN
            LLNZZLLLLLLLLYYYYYYYHHHHHHHHHHHHHHHHHHUUUUUUUUUUEEEEEEEZEEUUUUUUUUUUDDEEEEAAAOOOOENDDDNDDDDZZZZZZZFFFLLLLLLLLFFSULLLLUCCCCCCCYYCUUUUUULNMNNN
            LLLLLLLLLLLLLLLYYYYYYHHHHHHHHHHHHHHHHHUUUUUUUUEEEEEEFFUUUUUUUUUUUUUUDDDEEEAAAOOOODDDDDDDDDDZZYZZZZZFFLLLLLLLLFFFFLLLLLCCCCCCCCYYYUUUUUUNNNFN
            LLLLLHLLLLLLLLLYYYYYYHHHHHHHHHHHHHHHHHUUUUUUUUEUQEEEUUUUUUUDDDUUUUDDDDDEEEAAAOOOODDDDDDDDDDZZYZZZFFFFFFLLLLLFFFFFFLFLLLCWUCCCYYYYUUUUFNNNFFF
            LLLLLHLLLLLLLLYYYYYYYYYHHHHHHGGGGGGGGGUUUUUUUUUUUEEUUUUUUUUDDDUUDDDDDDEEEEAAAOOOODDDDDDDDDDDWWWHWFFWWWWLLLHLLLFFFFFFFFLCWWWZCYYYUUUUFFFFFFFF
            LLLLLNLLLLLLLLYYYYYYYYYYHHHHHGGGGGGGGGUUUUUUUUUUUUZUUUUUUUDDDDDDDDAAAAAAAAAAAOOOODDDDDDDDDDDDDWWWWFWWWVVHHHHLLHFFFFFFFLLWWWWWWYYUUUUFFFFFFFF
            LZLNNNLLLLLLZZZYYYYYYYYYYYYHHGGGGGGGGGGGGUUUUUUUUZZUZUUUUUUDDDDDDDAAAAAAAAAOOOOOODDDDDDDDDDDDWWWWWWWWWVHWHHHHLHFFFFFFFLWWWWYYYYFFFFFFFFFFFFF
            LZZZNZZLLLLLZZZYYYYYYYYYYHHHHGGGGGGGGGGGGGUUNUUUZZZZZUUUUZZDDDDDDDAAAAAAAAAOOOOOOOODDDDDDDDDDWWWWWWWWHHHHHHHHHHHFFHHHHWWWWWWWWWWWWFTTTTFFFFF
            ZZZZZZZZLLLLZYYYYYYYYYYYHHHHHGGGGGGGGGGGGGUNNNUUUZZZZZZZZZZDDDDDDDDDDDDDOOOOOOOOOOODDDDDDDDDDWWWWWWWHHHHHHHHHHHHHHHHHHHHWWWWWWWWWWWWTTTFFFFF
            ZZZZZFZZZZZZZZYYYYYYYYYYSSHHHGGGGGGGGGGGGGNNNNUUUUZZZZZZZDDDDDDDDDDDDDDDDOOOOOOOOOODDDDDDDDDDWWWWWWWWHHHHHHHHHHHHHHHHHHWWWWWWWWWWWWWTTTTFFFF
            DFFFFFFZZZZZZZYYYYYYYYYSSHHHHGGGGGGGGGGGGGNNNNUUUZZZZZZZZZZDDDDDDDDDDDNDLLOOOOOOOOODDDDDDDDDDDWWWWWWWWWHHHHHHHHHHHHHHHTIWWWWWWWWWWWWWTPFFFFF
            DDDFFFFZZZZMMZZMMYYYYYYYSSSHHGGGGGGGGGGGGGNNNNNNUZZZZZVVVVVVVVVDDDDDDDDDLLLLOOOOPOODDDDDDDDDDDDWWWWWWWWHHHHHHHHHHHHHHHTTTTTWWWWWWWWGFFFFFFFF
            DDDFFZFZMMMMMMMMMMMYYYYYSSSSSGGGGGGGGGGGGGNNNNNNUZZZZZVVVVVVVVVVVVDDDDDLLLLLLLLLLDDDDDDDDDDDDKDWWWWWWWHHHHHHHHHHHHHHHHTTTTTTWWWWWWWWFFFFFFFF
            DDDFFZZZMMMMMMMMMMMYYYYTLLLLLGGGGGGGGGGGGGNNNNNNNVVVVVVVVVVVVVVVVVDDDDDLLLLLLLLLLLLDDDDDDDDDKKDWWWWWWWHHHHHHHHHHHHHHHHTTTTTTWTWWWWWWFFTFFFFF
            DDDDFZZZMMMMMMMMMMMMYTTLLLLLLLLLGGGGGGGGGGNNNNNNNVVVVVVVVVVVVVVVVVDLDLLLLLLLLLLGGGGDDDKKKKKKKKDDWWWWWZZHHHHHBHHHHHHHTHTTTTTTTTTWWWWWWFTFFFFF
            DDDDZZZMMMMMMMMMMMTTTTTLLLLLLLLLGGGGGGGGGGGGGGNNNVVVVVVVVVVVVVVVVVDLLLLLLLLLLGGGGGGGDGMMKKKKKKKKKWWWZZWZHHHZBHHHHHHJTTTTTTTTTBTWSSSSWTTFFFFF
            DDDZZMMMMMMMMMMTTTTTTTLLLLLLLLLLGGGGGGGGGGGGGGNNNVVVVVVVVVVVVVVVVVLLLLLLLLLLGGGGGGGGGGGGLLKKKKKKKWWWZZZZZZZZZHBBHJJJTTTTTTTTTTTSSSSSSTTFFFFF
            DDDDDDMMMMMMMMYYYTTTTTLLLLLLLLLLLLGGGGGGGGGGGGNNNVVVVVVVVVVVVVVVVVLLLLWLLLLLLGGGGGGGGGGGLLKKKKKKKKYZZZZZZZZZZZBJJJJJTTTTTTTTTTTTRSSTSTFFFFFX
            DDDDDDDYMHMMYMYYTTTTTTLLLLLLLLLLLLGGGGGGGGGGGGNNNVVVVVVLLLZZLLLLLLLLLLWWWLLLLLGGGGGGGGGLLKKKKKKKKKYYZZZZZZZZZZBJJJJTTTTTTTTTTTTTTSSSSSSFFFFD
            DDDYYYYYMMMYYYYYYTTTTTTLLCCCLLLLLLGGGGGGGGGGGGNNNVVVVVVLLLLLLLLLLLWLLLWWOLLLLLGGGGGGGGGLLKKKKKKKKKYYYMZZZZZZZVJJJJJTTTTTTTTTTTTTTSSSSSSSSSBD
            DDYYYYYYMYYYYYMMYTTMTTTTTCCICCLLLLGGGGGGGGGGGGNNNVVVVVVLLLLLLLLLLLWLWLWWOLWLLLGGGGGGGGLLLLMRKKKKKYYYYYZZZZZZZZJJJJJTTJTTTTTTTTTTTOSSSSNNSDDD
            DDDYYYYYYYYYYYMMMMTMTTTTCCCCCCCCVVVVVVVVGGGGGGNNNVVVVVVLLLLLLLLLWWWWWWWWOLWWGGGGGGGGGGGGGMMRXKKYYYYYYYYYZZZZZZJJJJJJJTTTTTTTTTTOOOSSSSNDDDDD
            DDDYYYYYYYYYYYMMMMMMMTTTCCCCCCCCVVVVVVVYYOOOONNNNNNNNNNLLLLLLLLLWWWWWWWWWWWWGGGGGGGGGGGGMMMRXXXXXXYYYYYZZZZJJJJJJJJJJJTTTTTTOTOOOOOOSSDDDDDD
            DDYYYYYYYYYYYYMMMMTTTTTCCCCCCCCCCCCVVVVYYOOONNNNNNNNNNNLLLLLLLLLIWWWWWWWWWWWGGGGGGGGGGGMMMMRXXXXXYYYYYYYYZZZBJJBJJJJJJJTTTTTOOOOOOOOOODDDDDD
            DDDYYYYYYYYYYYMMMMMTTTTTTCCCCCCCCCCVVVVVYOONNNUNNNNNNLLLLLLLLLLLIWWWWWWWWWWWNGGGGGGGGGGGMCCXXXXXYYXYYYYYYYZBBJJBBJJJJJJJJQQTOOOOOOOODODDDDDD
            DDDDDFYYYYYYYYYYYYMTTTTTTTTCCCCCCCVVVVVVYYYRRNUUUUNNNNBLLBLLLLLLLWWWWWWWWWVVVGGGGGGGGGGGCCCGXXXXXXXXYYYYYYZBBJJBJJJJJJJZLLQTTOOXOOOODDDDDDDD
            XDXXDFYYYYYYYYYYIYYTTTTTTTTCCCCCCMVVVVVVYYYRRNRUNNNNNNBBLBLLLLNNNNWWWWWWWWVVVVGGGGGGGGCCCCCGGGCXXXXXXYYYYYBBBBBBJJJJJLLLLLQQQXXXXOOOODDDDDDD
            XXXXFFFYYYYYYYYYYTTTTTTTTTCCCCCCCMCVVVVVVVRRRRNUNNNNNNBBBBLLLLNNNNWWWWWWVVVVVVGGGGGGGGGGCCCGCGCXXXXXXYYYYYBXBBBBBJJWLLLLLLLLXXXXOOOODDDDDDDD
            XXQFFFFFYYYYYYYYFTTTTTTTTTCCCCCCCCCCVVVVVVRRRRNNNNNNNNRRRRLLLLUUUWWWUUUWWVVVVVVGGCCCGGCCCCCCCCCXXXXXVYYYYYYXXBBBBBLLLLLLLLLLXXXKKKKODDDDDDDD
            XXXXXFFFYYBYYYYYYTTTTTTTTCCCCCCCCCCCLLVVMRRRRKQNNQNNQNRRRRLLDUUUTUUUUUUUVVVVVVVGCCCCCCCCCCCCCCCXXCCCVYYYYYYXXBBBLLLLLLLLLLLLLXXKKKOOODDDDDDD
            XXXXXFFFFYBYBBBNYTTTTTTTTCCWWWCCCCCCLLLORRRBBQQQQQQQQQQQRRLLDDUUUUUUUUUUUUVVVCCCCCCCCCCCCCCCCCCCCCCVVYLYYYXXXXBBBBLLLLLLLLLLUXXKKKOOODDDDDDD
            XXXFXFFFFBBBBBBNTTGGGTTTTCWWWWCJJJCLLLLLRRLBLLQQQQQQQQQQRRRLDDUUUUUUUUUUUUVUVVVCCCCCCCCCCCCCCCCCCCCCCCLYLYXXXXXBLLLLLLLLQHHHHXXKKKKKDDDDDDDD
            XXXFFFFFFFBBBBBBYTGGGTTTTTZZWWWJJJCTLLLQQLLLLLLQQQQQQQRRRRRRDDUUUUUUUUUUUUUUVVVVVCCCWLWWCCCCCCCCCCCCCCLYLXXXXXBBLLLLLLLLLHHHHXHEKKKKKDYYKDDD
            XXFFFFFFFFBBBBBBBTGGGTTTZTZZZZWWJJLLLLLLLLLLLLLQQQQQQQQRRRRRUUUUUUUUUUUUUUVVVVVVCCCNWWWWWWCCCCCCCCCCCCLLLXXXXXXBBBLLLLLLLHHHHHHKKKKKKNKKKDDD
            XXFFFFFFFFBIBBBBBIITTTTTZZZZZZPWLLLLLLLLLLLLLLLQQQQQQRRRRRRRRUUUUUUUUUUUUUUVVVVVCVWNNWWWWCCCCWCCECCCRMRRLXXXXXXBBLLLLLLLLHHHHHOOKKKKKKKOODDD
            XFFFFFFFFFBBBBBBBIIIITFTTEZZZZPLGLLLLLLLLLLLLLLLLQQBBRRRRRRRRRRUUOUUUUUUUHVVVVVVVVWWWWWWWCWWCWCCCCRRRRRLLXXXXXXBBLLLLLLLHHHHHHHKKKKKKKOOODYY
            FFFFFFFFFFBBBBBBBBIIILZZZZZZZZLLLLLLLLLLLLLZZZLBBBBRRRRGGGGRBBBUPOUUUUUUHHVVVVVVVVWWWWWWWWWWWWWCCRRRRRRRRXXXXXXBBBLLLLLLHHHHHHHLKKKVKVTTTTYT
            FFFFFFFFFFBBBBBBBIIIIZZRZZZZZZZLLLLLLLLLLLLZZZBBBBBRRRRGGGGGGGGPPOUUUUUUUVVVVVVVVVWWWWWWWWWWWRRRRRRRRRRRRXXXXXXBBBBLLLBLHHHHHHHHHVVVKVTTTTTT
            FFFFFFFFFFBBBBBBBBIIZZZZZZZZZZZLLLLLLLLLLLLLLLBBBBRRRRRGGGGGGGGPPPUUUDDUUVVVBVWBVVVWWWWWWWWWWWRRWRRRRRERQQXXXXXBBBBLLLLLHJHHHHHHHVVVVVVVTTTT
            FFFFFFFFFFBBBBBBIIIIIJZZZZZZZZZLLLLLLLLLLLLLBBBBBBRRRRRGGGGGGGPPPPUUDDDUBVBBBVWBVVVWWWWWWWWWWWWWWRRRRREEJJXXXJBBBBBBLLJJJJHHHHHVVVVVVVEVTTTT
            FFFFFFFFFSBBBBBBIIIIIZZZZZZZZZZLLLQLLLLLULBBBBBBBRRRRRRGHGGHHGPPPPPPPPPBBBBBBBBBFWWWWWWWWWWWWWWWWRRRRRRJJJJXXJJBBBBBJJJJJJHJHVVVVVVVVVETTTTT
            FFFFFFFFFSFIIIBBIIIIZZZZZZZMZZZZLLLHLLLLLBBBBBBBBRRRRRRRHHHHHHHHHPPPPPBBBBBBBBBBBPWWWWWWWWWWWWWWWRRRRZZZJJXXXJJJBBBBJJJJJJHJJJVVVVVVVVEETTTT
            FFFFFFFFFFFIIIBIIIIIIIIIZZMMZZZLLLLLLLEELBBBBBBBBRRRRRRRRHHHHHHHHPPPPBBBBBBBBBBBBWWWWWWWWWWWWWWWWRRYRRRJJJJJJJBBBBBBJJJJJJJJJJVVVZZZZEEEEETI
            FFFFFFFFFFFFFIIIIIIIIIIPZHHMMZLLLLLLLLLLLBBBBBBBBBBRRRRRHHHHHHHHPPPPPPBBBBBBBBBBBWWWWWWWWWWWWWWWWRRRJRJJJJJJJJBBBBBJJJJJJJJJJJVVVZZZZEEEEEII
            FFFFFFFFFFFIIIIIIIIIIIIPPFHFMZLLLLLLLLLLLLBBBBBBBHHHUURHHHHHHHHPPPPPPPBBBBBBBBBBBWWBGGWWWWWWWWWWJJRJJJJJJJJJJBBBBBBJJJJJJJJJJJVVVVZZZZEEEYYY
            EFTTFFFFFFIIIIIIIIIIIIIIIFFFMLLLLLLLLLLLLLBBBBBBBBBHHHHHHHHHHHHHHPPBBBBBBBBBBBBBBBBBGSSRSWWWWWWWJJJJJJJJJJRJJBBBBBBBJJJJJJJJJJJVVVZZZGEYYYYY
            EEFFFFFFFFFFFIIIIIIIIIFFFFFHFLLLLLLLLLLLLLBBBBBBBBBHHHHHHHHHHHHHHHHBBBBBBBBBBBBBBBBBSSSSSSWWWWWWJJJJJJJJJJJJBBBBBBBBBIIRJJJJJJJWVVVVYYXXYYYY
            EEFFFFFFFFFFFIIIIIIIIFFFFFFFFFLLLLLLLLLLLLBBBDBBBBBBHHHHHHHHHHHHHHHBBBBBBBBBBBSBBBBBBBSSSSSWWWWWWJJJJJJJJJBBBBBBBIBBIIIIIIJWWWWWWWWVYYYYYYYY
            EEFFFFFFFFFFIIFIIIIIWFFFFFFFFLLLLLLLLLLLLLLDDDBDBBDBHHHHHHHHHHHHHHHBBBBBBBBBBBSBBBBBBBSSSSSSSWWWWJJJJJJJJJJJBBBIIIBBIIIIIIIOWWWWWWYYYYYYYYYY
            EFFFFFFFFFFFFFFIIIIIWTFFFFFFFLLLLLLLLLLLLYYYYDDDDDDBHHHHHHHHHHHHHHHHHBBBBBBBBBBBBBBBBBSSWSSSSWWWWWWJJJZJXXXJBBBIIIIIIIIIIIZWWWWWWYYYYYYYYYYY
            EEZFFFFFFFFFFFFIIIIWWTFFFFFFFLLLLLLLYYYYYYYYYDDDDGHHHHHAHHHHHHHHHHHHLBBBBBYBBBYBBBBBBBWWWSSSSWWWWEEJEJJXXXQRBBBIIIIIIIIIIIIIWWWWWWYYYYYYYYYY
            ZZZBFFFFFFFFFFFIIIIIWFFFFFFFFLLLLLLLLYYYYYYYDDDDDDPPHHAAAAHHHHHHHHHHLBYBYYYYYYYYBBBBBWWWWSSWSWWWWEEEEQQQQQQRBBFNNRIIIIIIIIIICWWWWYYYYYYYYYYY
            ZZZBFFFFFFFFFIIIIGIIWWFFFFFCFULLLLLMLYYYYYYYYDDDDDEPPPAAAAAHHHHHHHHHHHYYYYYYYYYBBBBBBWWWWWSWSWWEEEEEEQQQQQQRRBBNNRRIIIIIIIICCWWWWWYYYYYYYYYY
            ZZZZZZFFFFFFFIIIIIIWWFFFFFFFWWLLLLLLYYYYYYYYYYEDEEEPAAAAAAKKKHHHHHHHHHHHYYYYYYBBBBBBBZWWWWWWWWWEEEEEEQQQQQQQRBBNNNIIIIIIICCCCCTTWTYYYYYYYYYY
            ZZZZZZZFFFUFFIIIIIIWWWWFFFFFWWWLLLYLYRYYYYYYYYEEEEEAAAAAAAKHHHHHHHHHHHHHYYYYYYYBBBBBBZWWWWWWWWEEEEEEEQQQQQQRRQQQNNIIIIIIICCCCTTTTTTYYYYYYYYY
            ZZZZZFFFFFFFFFFIIIIIWWWWFFWWWWWLWWYYYRYRYYYYYYEEEEEAAAAAAAAHHLLWHHHHHHHHHYYYYYYYBBBBBZWWWWWWWWWWEEVEEQQQQQQQQQQQNNNIICCCCCCCCTTTTTTTYYYYYYYY
            ZZZZZVVVVFFFFVVIIIIWWWWWFWWWWWWWWWWRRRRRRYYYYYEEEEEEAAAAAALLLLLWHHHHHHHYYYYYYYYYYZZZZZZZZWWWWWWWWEVVQNQQQQQQQQQNNNNNICCCCCCCCCCTTTTTTTYYYYYY
            ZZZZZZVVVVVFFVVIWWWWWWWWWWWWWWWWRRRRRRRRRRIYIIIEEEEEAEEEALLLLLLHHHHHHHYYYYYYYYZZZZEZZZZZZWWWVWWWVWVQQQQQQQQQQQQQNNNNCCCCCCCCCTTTTTTTTTYYYYYY
            VVVZZVVVVVVVVVVVVWWVWWWWWWWWWWWWRRRRRRRRRRIYIIIEEEEEEEEEEELLLLLHHHHDHYYYYYZZZZZZZZZZZZZZWWWVVVVWVVVVVQBQQQQQQQNNNNNNNNCCCCCCCTTTTTTTTTYYYYYY
            VVVZVVVVVVVVVVVVVVVVWWWWWWWWWWWWRRRRRRRRRRIIIEEEEEEEEEEEELLLLLLLLLLLYYYYRYZZZZZZZZZZZZZZWWWWVVVVVVVVQQQQQQQQQNNNNNNNNCCCCCCCCTTTTTTTTYYYYYYY
            VVVVVVVVVVVVVVVVVVVVWWWWWWWWWWWWBRRRRRRRIIIIIEEEEEEEEEEEEELLLLLLLLLYYYYRRRKKZZZZZZZZZZZZZZVVVVVVVVVVVQQQQQQQNNNNNNNNNCCCCCCCCTTTTTTTTTTYYYYY
            VVVVVVVVVVVVVVVVVVVVVWWWWWWWWWWWRRRRRRRRIIIIIEEEEEEEEEEEELLLLLLLLLLLYYYRRRRKZZZZZZZZZZZZZZVVVVVVVVVVVVQQNQQNNNNNNNNNNCCCCCCCCTTTTTTTTTYYYYYY
            VVVVVVVVVVVVVVVVVVVVWWWWWWWWWWWWWRRRRRRRRIEEEEEEEEEEEEEELLLLLLLLLLLLLYRRRRRZZZZZZZZZZZZZZZWVVVVVVVVVVVNNNNNNNNNNNNNNNNNCCCCTTTTTTTTTTTYYYYYT
            VVVVVVVVVVVVVVVVVWWWWWWWWWWWWWWWWRRRRRRRRREEEEEEEEEEEEEEELLLLLLLLLLEERRRRRZZZZZZZZZZZZZZZZZVVVVVVVVVVVNNNNNNNNNNNNNNNCCCCDCTTTTTTTTTTTYYYYTT
            """;

    public static void main(String[] args) {
        System.out.println("Part 1 --- example: " + part1(exampleInput));
        System.out.println("Part 1 --- real: " + part1(realInput));
        System.out.println("Part 2 --- example: " + part2(exampleInput));
        System.out.println("Part 2 --- real: " + part2(realInput));
    }

    private static Object part1(String input) {
        var grid = parseInput(input);
        List<Region> regions = getRegions(grid);

        return regions.stream()
                .mapToInt(region -> region.getArea() * region.getPerimeter())
                .sum();
    }

    private static Object part2(String input) {
        var grid = parseInput(input);
        List<Region> regions = getRegions(grid);

        return regions.stream()
                .mapToInt(region -> region.getArea() * region.getSides())
                .sum();
    }

    private static char[][] parseInput(String input) {
        var lines = input.split("\n");
        var size = lines.length;
        var grid = new char[size][size];
        for (int row = 0; row < size; row++) {
            for (int col = 0; col < size; col++) {
                grid[row][col] = lines[row].charAt(col);
            }
        }
        return grid;
    }

    private static List<Region> getRegions(char[][] grid) {
        var size = grid.length;
        List<Region> regions = new ArrayList<>();

        for (int row = 0; row < size; row++) {
            for (int col = 0; col < size; col++) {
                Position position = new Position(row, col);
                if (regions.stream().noneMatch(region -> region.positions.contains(position))) {
                    Region newRegion = findRegion(grid, position);
                    regions.add(newRegion);
                }
            }
        }
        return regions;
    }

    private static Region findRegion(char[][] grid, Position pos) {
        char type = grid[pos.row()][pos.col()];
        Region region = new Region(type);
        findRegionInternal(region, grid, pos, type);
        return region;
    }

    private static void findRegionInternal(Region region, char[][] grid, Position pos, char type) {
        if (isInBounds(pos, grid.length) && grid[pos.row()][pos.col()] == type && !region.includes(pos)) {
            region.addPosition(pos);
            findRegionInternal(region, grid, new Position(pos.row(), pos.col() + 1), type);
            findRegionInternal(region, grid, new Position(pos.row() + 1, pos.col()), type);
            findRegionInternal(region, grid, new Position(pos.row(), pos.col() - 1), type);
            findRegionInternal(region, grid, new Position(pos.row() - 1, pos.col()), type);
        }
    }

    private static boolean isInBounds(Position pos, int gridSize) {
        return pos.row() >= 0 && pos.row() < gridSize && pos.col() >= 0 && pos.col() < gridSize;
    }

    private static class Region {
        final char type;
        final Set<Position> positions = new HashSet<>();

        public Region(char type) {
            this.type = type;
        }

        public void addPosition(Position position) {
            positions.add(position);
        }

        public boolean includes(Position position) {
            return positions.contains(position);
        }

        public int getArea() {
            return positions.size();
        }

        public int getPerimeter() {
            return positions.stream()
                    .mapToInt(pos -> {
                        int sides = 0;
                        sides += positions.contains(new Position(pos.row(), pos.col() + 1)) ? 0 : 1;
                        sides += positions.contains(new Position(pos.row() + 1, pos.col())) ? 0 : 1;
                        sides += positions.contains(new Position(pos.row(), pos.col() - 1)) ? 0 : 1;
                        sides += positions.contains(new Position(pos.row() - 1, pos.col())) ? 0 : 1;
                        return sides;
                    })
                    .sum();
        }

        public int getSides() {
            List<Position> leftEdgePositions = positions.stream()
                    .filter(pos -> !positions.contains(new Position(pos.row(), pos.col() + 1)))
                    .sorted(Comparator.comparingInt(Position::col).thenComparingInt(Position::row))
                    .toList();

            List<Position> topEdgePositions = positions.stream()
                    .filter(pos -> !positions.contains(new Position(pos.row() - 1, pos.col())))
                    .sorted(Comparator.comparingInt(Position::row).thenComparingInt(Position::col))
                    .toList();

            List<Position> rightEdgePositions = positions.stream()
                    .filter(pos -> !positions.contains(new Position(pos.row(), pos.col() - 1)))
                    .sorted(Comparator.comparingInt(Position::col).thenComparingInt(Position::row))
                    .toList();

            List<Position> bottomEdgePositions = positions.stream()
                    .filter(pos -> !positions.contains(new Position(pos.row() + 1, pos.col())))
                    .sorted(Comparator.comparingInt(Position::row).thenComparingInt(Position::col))
                    .toList();

            int leftEdges = countVerticalEdges(leftEdgePositions);
            int topEdges = countHorizontalEdges(topEdgePositions);
            int rightEdges = countVerticalEdges(rightEdgePositions);
            int bottomEdges = countHorizontalEdges(bottomEdgePositions);

            return leftEdges + topEdges + rightEdges + bottomEdges;
        }

        private static int countVerticalEdges(List<Position> verticalPositions) {
            int verticalEdges = 1;
            for (int i = 1; i < verticalPositions.size(); i++) {
                Position prev = verticalPositions.get(i - 1);
                Position curr = verticalPositions.get(i);
                if (prev.col() != curr.col() || curr.row() - prev.row() > 1) {
                    // start of a new edge
                    verticalEdges++;
                }
            }
            return verticalEdges;
        }

        private static int countHorizontalEdges(List<Position> horizontalPositions) {
            int horizontalEdges = 1;
            for (int i = 1; i < horizontalPositions.size(); i++) {
                Position prev = horizontalPositions.get(i - 1);
                Position curr = horizontalPositions.get(i);
                if (prev.row() != curr.row() || curr.col() - prev.col() > 1) {
                    // start of a new edge
                    horizontalEdges++;
                }
            }
            return horizontalEdges;
        }
    }
}